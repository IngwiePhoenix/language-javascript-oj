{
  "scopeName": "source.js.oj",
  "fileTypes": [
    "oj"
  ],
  "name": "JavaScript (OJ)",
  "patterns": [
    {
      "begin": "((@)(protocol))(?!.+;)\\s+([A-Za-z_][A-Za-z0-9_]*)\\s*((:)(?:\\s*)([A-Za-z][A-Za-z0-9]*))?(\\s|\\n)?",
      "captures": {
        "1": {
          "name": "storage.type.js.oj"
        },
        "2": {
          "name": "punctuation.definition.storage.type.js.oj"
        },
        "4": {
          "name": "entity.name.type.js.oj"
        },
        "6": {
          "name": "punctuation.definition.entity.other.inherited-class.js.oj"
        },
        "7": {
          "name": "entity.other.inherited-class.js.oj"
        },
        "8": {
          "name": "meta.divider.js.oj"
        },
        "9": {
          "name": "meta.inherited-class.js.oj"
        }
      },
      "contentName": "meta.scope.interface.js.oj",
      "end": "((@)end)\\b",
      "name": "meta.interface-or-protocol.js.oj",
      "patterns": [
        {
          "include": "#interface_innards"
        }
      ]
    },
    {
      "begin": "((@)(implementation))\\s+([A-Za-z_][A-Za-z0-9_]*)\\s*(?::\\s*([A-Za-z][A-Za-z0-9]*))?",
      "captures": {
        "1": {
          "name": "storage.type.js.oj"
        },
        "2": {
          "name": "punctuation.definition.storage.type.js.oj"
        },
        "4": {
          "name": "entity.name.type.js.oj"
        },
        "5": {
          "name": "entity.other.inherited-class.js.oj"
        }
      },
      "contentName": "meta.scope.implementation.js.oj",
      "end": "((@)end)\\b",
      "name": "meta.implementation.js.oj",
      "patterns": [
        {
          "include": "#implementation_innards"
        }
      ]
    },
    {
      "begin": "@\"",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.js.oj"
        }
      },
      "end": "\"",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.js.oj"
        }
      },
      "name": "string.quoted.double.js.oj",
      "patterns": [
        {
          "include": "source.c#string_escaped_char"
        },
        {
          "match": "(?x)%\n\t\t\t\t\t\t(\\d+\\$)?                             # field (argument #)\n\t\t\t\t\t\t[#0\\- +']*                          # flags\n\t\t\t\t\t\t((-?\\d+)|\\*(-?\\d+\\$)?)?              # minimum field width\n\t\t\t\t\t\t(\\.((-?\\d+)|\\*(-?\\d+\\$)?)?)?         # precision\n\t\t\t\t\t\t[@]                                  # conversion type\n\t\t\t\t\t",
          "name": "constant.other.placeholder.js.oj"
        },
        {
          "include": "source.c#string_placeholder"
        }
      ]
    },
    {
      "begin": "\\b(id)\\s*(?=<)",
      "beginCaptures": {
        "1": {
          "name": "storage.type.js.oj"
        }
      },
      "end": "(?<=>)",
      "name": "meta.id-with-protocol.js.oj",
      "patterns": [
        {
          "include": "#protocol_list"
        }
      ]
    },
    {
      "captures": {
        "1": {
          "name": "punctuation.definition.keyword.js.oj"
        }
      },
      "match": "(@)(try|catch|finally|throw)\\b",
      "name": "keyword.control.exception.js.oj"
    },
    {
      "captures": {
        "1": {
          "name": "punctuation.definition.keyword.js.oj"
        }
      },
      "match": "(@)(synchronized)\\b",
      "name": "keyword.control.synchronize.js.oj"
    },
    {
      "captures": {
        "1": {
          "name": "punctuation.definition.keyword.js.oj"
        }
      },
      "match": "(@)(required|optional)\\b",
      "name": "keyword.control.protocol-specification.js.oj"
    },
    {
      "captures": {
        "1": {
          "name": "punctuation.definition.keyword.js.oj"
        }
      },
      "match": "(@)(defs|encode)\\b",
      "name": "keyword.other.js.oj"
    },
    {
      "match": "\\bid\\b",
      "name": "storage.type.id.js.oj"
    },
    {
      "match": "\\b(BOOL|SEL|id|unichar|IMP|Class|instancetype)\\b",
      "name": "storage.type.js.oj"
    },
    {
      "captures": {
        "1": {
          "name": "punctuation.definition.storage.type.js.oj"
        }
      },
      "match": "(@)(class|protocol)\\b",
      "name": "storage.type.js.oj"
    },
    {
      "begin": "((@)selector)\\s*(\\()",
      "beginCaptures": {
        "1": {
          "name": "storage.type.js.oj"
        },
        "2": {
          "name": "punctuation.definition.storage.type.js.oj"
        },
        "3": {
          "name": "punctuation.definition.storage.type.js.oj"
        }
      },
      "contentName": "meta.selector.method-name.js.oj",
      "end": "(\\))",
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.storage.type.js.oj"
        }
      },
      "name": "meta.selector.js.oj",
      "patterns": [
        {
          "captures": {
            "1": {
              "name": "punctuation.separator.arguments.js.oj"
            }
          },
          "match": "\\b(?:[a-zA-Z_:][\\w]*)+",
          "name": "support.function.any-method.name-of-parameter.js.oj"
        }
      ]
    },
    {
      "captures": {
        "1": {
          "name": "punctuation.definition.storage.modifier.js.oj"
        }
      },
      "match": "(@)(synchronized)\\b",
      "name": "storage.modifier.js.oj"
    },
    {
      "match": "\\b(YES|NO|Nil|nil)\\b",
      "name": "constant.language.js.oj"
    },
    {
        "include": "source.js"
    },
    {
      "include": "#bracketed_content"
    }
  ],
  "repository": {
    "bracketed_content": {
      "begin": "\\[",
      "beginCaptures": {
        "0": {
          "name": "punctuation.section.scope.begin.js.oj"
        }
      },
      "end": "\\]",
      "endCaptures": {
        "0": {
          "name": "punctuation.section.scope.end.js.oj"
        }
      },
      "name": "meta.bracketed.js.oj",
      "patterns": [
        {
          "begin": "(?=predicateWithFormat:)(?<=NSPredicate )(predicateWithFormat:)",
          "beginCaptures": {
            "1": {
              "name": "support.function.any-method.js.oj"
            },
            "2": {
              "name": "punctuation.separator.arguments.js.oj"
            }
          },
          "end": "(?=\\])",
          "name": "meta.function-call.predicate.js.oj",
          "patterns": [
            {
              "captures": {
                "1": {
                  "name": "punctuation.separator.arguments.js.oj"
                }
              },
              "match": "\\bargument(Array|s)(:)",
              "name": "support.function.any-method.name-of-parameter.js.oj"
            },
            {
              "captures": {
                "1": {
                  "name": "punctuation.separator.arguments.js.oj"
                }
              },
              "match": "\\b\\w+(:)",
              "name": "invalid.illegal.unknown-method.js.oj"
            },
            {
              "begin": "@\"",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.string.begin.js.oj"
                }
              },
              "end": "\"",
              "endCaptures": {
                "0": {
                  "name": "punctuation.definition.string.end.js.oj"
                }
              },
              "name": "string.quoted.double.js.oj",
              "patterns": [
                {
                  "match": "\\b(AND|OR|NOT|IN)\\b",
                  "name": "keyword.operator.logical.predicate.cocoa"
                },
                {
                  "match": "\\b(ALL|ANY|SOME|NONE)\\b",
                  "name": "constant.language.predicate.cocoa"
                },
                {
                  "match": "\\b(NULL|NIL|SELF|TRUE|YES|FALSE|NO|nil)\\b",
                  "name": "constant.language.predicate.cocoa"
                },
                {
                  "match": "\\\\(\\\\|[abefnrtv'\"?]|[0-3]\\d{,2}|[4-7]\\d?|x[a-zA-Z0-9]+)",
                  "name": "constant.character.escape.js.oj"
                },
                {
                  "match": "\\\\.",
                  "name": "invalid.illegal.unknown-escape.js.oj"
                }
              ]
            },
            {
              "include": "#special_variables"
            },
            {
              "include": "$base"
            }
          ]
        },
        {
          "begin": "(?=\\w)(?<=[\\w\\])\"] )(\\w+(?:(:)|(?=\\])))",
          "beginCaptures": {
            "1": {
              "name": "support.function.any-method.js.oj"
            },
            "2": {
              "name": "punctuation.separator.arguments.js.oj"
            }
          },
          "end": "(?=\\])",
          "name": "meta.function-call.js.oj",
          "patterns": [
            {
              "captures": {
                "1": {
                  "name": "punctuation.separator.arguments.js.oj"
                }
              },
              "match": "\\b\\w+(:)",
              "name": "support.function.any-method.name-of-parameter.js.oj"
            },
            {
              "include": "#special_variables"
            },
            {
              "include": "$base"
            }
          ]
        },
        {
          "include": "#special_variables"
        },
        {
          "include": "$self"
        }
      ]
    },
    "implementation_innards": {
      "patterns": [
        {
          "include": "#special_variables"
        },
        {
          "include": "#method_super"
        },
        {
          "include": "$base"
        }
      ]
    },
    "interface_innards": {
      "patterns": [
        {
          "include": "#properties"
        },
        {
          "include": "#protocol_list"
        },
        {
          "include": "#method"
        },
        {
          "include": "$base"
        }
      ]
    },
    "method": {
      "begin": "^(-|\\+)\\s*",
      "end": "(?=\\{|#)|;",
      "name": "meta.function.js.oj",
      "patterns": [
        {
          "begin": "(\\()",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.type.begin.js.oj"
            }
          },
          "end": "(\\))\\s*(\\w+\\b)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.type.end.js.oj"
            },
            "2": {
              "name": "entity.name.function.js.oj"
            }
          },
          "name": "meta.return-type.js.oj",
          "patterns": [
            {
              "include": "#protocol_list"
            },
            {
              "include": "#protocol_type_qualifier"
            },
            {
              "include": "$base"
            }
          ]
        },
        {
          "match": "\\b\\w+(?=:)",
          "name": "entity.name.function.name-of-parameter.js.oj"
        },
        {
          "begin": "((:))\\s*(\\()",
          "beginCaptures": {
            "1": {
              "name": "entity.name.function.name-of-parameter.js.oj"
            },
            "2": {
              "name": "punctuation.separator.arguments.js.oj"
            },
            "3": {
              "name": "punctuation.definition.type.begin.js.oj"
            }
          },
          "end": "(\\))\\s*(\\w+\\b)?",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.type.end.js.oj"
            },
            "2": {
              "name": "variable.parameter.function.js.oj"
            }
          },
          "name": "meta.argument-type.js.oj",
          "patterns": [
            {
              "include": "#protocol_list"
            },
            {
              "include": "#protocol_type_qualifier"
            },
            {
              "include": "$base"
            }
          ]
        }
      ]
    },
    "method_super": {
      "begin": "^(?=-|\\+)",
      "end": "(?<=\\})|(?=#)",
      "name": "meta.function-with-body.js.oj",
      "patterns": [
        {
          "include": "#method"
        },
        {
          "include": "$base"
        }
      ]
    },
    "properties": {
      "patterns": [
        {
          "begin": "((@)property)\\s*(\\()",
          "beginCaptures": {
            "1": {
              "name": "keyword.other.property.js.oj"
            },
            "2": {
              "name": "punctuation.definition.keyword.js.oj"
            },
            "3": {
              "name": "punctuation.section.scope.begin.js.oj"
            }
          },
          "end": "(\\))",
          "endCaptures": {
            "1": {
              "name": "punctuation.section.scope.end.js.oj"
            }
          },
          "name": "meta.property-with-attributes.js.oj",
          "patterns": [
            {
              "match": "\\b(getter|setter|readonly|readwrite|assign|retain|copy|nonatomic|strong|weak)\\b",
              "name": "keyword.other.property.attribute"
            }
          ]
        },
        {
          "captures": {
            "1": {
              "name": "keyword.other.property.js.oj"
            },
            "2": {
              "name": "punctuation.definition.keyword.js.oj"
            }
          },
          "match": "((@)property)\\b",
          "name": "meta.property.js.oj"
        }
      ]
    },
    "property_directive": {
      "captures": {
        "1": {
          "name": "punctuation.definition.keyword.js.oj"
        }
      },
      "match": "(@)(dynamic|synthesize)\\b",
      "name": "keyword.other.property.directive.js.oj"
    },
    "protocol_list": {
      "begin": "(<)",
      "beginCaptures": {
        "1": {
          "name": "punctuation.section.scope.begin.js.oj"
        }
      },
      "end": "(>)",
      "endCaptures": {
        "1": {
          "name": "punctuation.section.scope.end.js.oj"
        }
      },
      "name": "meta.protocol-list.js.oj",
      "patterns": [
        {
          "match": "\\bNS(GlyphStorage|M(utableCopying|enuItem)|C(hangeSpelling|o(ding|pying|lorPicking(Custom|Default)))|T(oolbarItemValidations|ext(Input|AttachmentCell))|I(nputServ(iceProvider|erMouseTracker)|gnoreMisspelledWords)|Obj(CTypeSerializationCallBack|ect)|D(ecimalNumberBehaviors|raggingInfo)|U(serInterfaceValidations|RL(HandleClient|DownloadDelegate|ProtocolClient|AuthenticationChallengeSender))|Validated(ToobarItem|UserInterfaceItem)|Locking)\\b",
          "name": "support.other.protocol.js.oj"
        }
      ]
    },
    "protocol_type_qualifier": {
      "match": "\\b(in|out|inout|oneway|bycopy|byref)\\b",
      "name": "storage.modifier.protocol.js.oj"
    },
    "special_variables": {
      "patterns": [
        {
          "match": "\\b(self|super)\\b",
          "name": "variable.language.js.oj"
        }
      ]
    }
  }
}
